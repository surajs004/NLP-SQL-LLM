# -*- coding: utf-8 -*-
"""openai-sql.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j8UfYWmW4h1hZlwIcetmaabEER5Tw8sT
"""

!pip install langchain
!pip install langchain-experimental
!pip install openai

import pandas as pd
import sqlite3
from langchain import PromptTemplate, HuggingFaceHub, LLMChain
from langchain.llms import OpenAI
from langchain.utilities import SQLDatabase
from langchain_experimental.sql import SQLDatabaseChain

df = pd.read_csv('/content/delivery_keyresult_view.csv')

conn = sqlite3.connect('SQL_db.sqlite')

c = conn.cursor()

c.execute('CREATE TABLE IF NOT EXISTS Delivery_Result (project_id int,  project_name text, keyresult_id int, keyresult_name text , child_keyresult_id int , child_keyresult_name text )')
conn.commit()

df.to_sql('Delivery_Result', conn, if_exists='replace', index = False)

c.execute('''
SELECT project_name FROM Delivery_Result
          ''')

for i in c.fetchall():
  print(i)

def read_sql_query(sql, db):
    conn = sqlite3.connect(db)
    cur = conn.cursor()
    cur.execute(sql)
    rows = cur.fetchall()
    for row in rows:
        print(row)
    conn.close()

import sqlite3
read_sql_query('SELECT * FROM Delivery_Result;',
               "SQL_db.sqlite")

input_db = SQLDatabase.from_uri('sqlite:///SQL_db.sqlite')

import os
os.environ['OPENAI_API_KEY'] = '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'

from langchain import PromptTemplate, HuggingFaceHub, LLMChain

# template = """Question:{question},
# consider key_result_name as key result and child_keyresult_name as child result
# """

llm_1 = OpenAI(temperature=0)

db_agent = SQLDatabaseChain.from_llm(llm = llm_1,
                            db = input_db,
                            verbose=True)

db_agent.run("consider key_result_name as key result and child_keyresult_name as child result , what is the key result for testing beta")

#Prompt Template

from langchain.prompts.prompt import PromptTemplate

template = """

Question:"Question here"
SQLQuery:"SQL Query to run"
SQLResult: "Result of the SQLQuery"
Answer:"Final answer here"
if someone asks for the key result and child result , they really mean the keyresult_name and child_keyresult_name respectively from Delivery_result table.
Question:{input}
 """
PROMPT = PromptTemplate(template = template ,
    input_variables=["input"]
)

db_chain = SQLDatabaseChain.from_llm(llm = llm_1,
                                     db = input_db,
                                     prompt=PROMPT,
                                     verbose=True)

db_chain.run("what is the key result for project testing beta")

db_chain.run("how many rows are there in the table")

db_chain.run("how many uniques projects are there?")

db_chain.run("how many projects  don't have child key result")

res = db_chain.run("give me the key result and the child result for project name java")

print(res)